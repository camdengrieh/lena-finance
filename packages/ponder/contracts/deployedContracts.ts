/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1301: {
    LenaLock: {
      address: "0x127c78c6b8f8199f324a03A37b0962b62Dd18B82",
      abi: [
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_autoCollectAddress",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_lpFeeReceiver",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_collectFeeReceiver",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "nameHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "lpFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "collectFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "flatFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "flatFeeToken",
              type: "address",
            },
          ],
          name: "onAddFee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
          ],
          name: "onDecreaseLiquidity",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "nameHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "lpFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "collectFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "flatFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "flatFeeToken",
              type: "address",
            },
          ],
          name: "onEditFee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
          ],
          name: "onIncreaseLiquidity",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lock_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nftPositionManager",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nft_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "additionalCollector",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "collectAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unlockDate",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "collectFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "poolAddress",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint96",
                  name: "nonce",
                  type: "uint96",
                },
                {
                  internalType: "address",
                  name: "operator",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "token0",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "token1",
                  type: "address",
                },
                {
                  internalType: "uint24",
                  name: "fee",
                  type: "uint24",
                },
                {
                  internalType: "int24",
                  name: "tickLower",
                  type: "int24",
                },
                {
                  internalType: "int24",
                  name: "tickUpper",
                  type: "int24",
                },
                {
                  internalType: "uint128",
                  name: "liquidity",
                  type: "uint128",
                },
                {
                  internalType: "uint256",
                  name: "feeGrowthInside0LastX128",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "feeGrowthInside1LastX128",
                  type: "uint256",
                },
                {
                  internalType: "uint128",
                  name: "tokensOwed0",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "tokensOwed1",
                  type: "uint128",
                },
              ],
              indexed: false,
              internalType: "struct INonfungiblePositionManager.Position",
              name: "position",
              type: "tuple",
            },
          ],
          name: "onLock",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "currentOwner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "pendingOwner",
              type: "address",
            },
          ],
          name: "onLockOwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unlockDate",
              type: "uint256",
            },
          ],
          name: "onRelock",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "nameHash",
              type: "bytes32",
            },
          ],
          name: "onRemoveFee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "additionalCollector",
              type: "address",
            },
          ],
          name: "onSetAdditionalCollector",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "collectAddress",
              type: "address",
            },
          ],
          name: "onSetCollectAddress",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "migrator",
              type: "address",
            },
          ],
          name: "onSetMigrator",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ucf",
              type: "uint256",
            },
          ],
          name: "onSetUCF",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "oldOwner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "onTransferLockOwnership",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lock_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "onWithdraw",
          type: "event",
        },
        {
          inputs: [],
          name: "AUTO_COLLECT_ACCOUNT",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ETERNAL_LOCK",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_ADDR_COLLECT",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_ADDR_LP",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_DENOMINATOR",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_RESOLVER",
          outputs: [
            {
              internalType: "contract IFeeResolver",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "LOCKS",
          outputs: [
            {
              internalType: "uint256",
              name: "lock_id",
              type: "uint256",
            },
            {
              internalType: "contract INonfungiblePositionManager",
              name: "nftPositionManager",
              type: "address",
            },
            {
              internalType: "address",
              name: "pool",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nft_id",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "pendingOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "additionalCollector",
              type: "address",
            },
            {
              internalType: "address",
              name: "collectAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "unlockDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "ucf",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NONCE",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
          ],
          name: "acceptLockOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_lpFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_collectFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_flatFee",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_flatFeeToken",
              type: "address",
            },
          ],
          name: "addOrEditFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "adminRefundERC20",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_receiver",
              type: "address",
            },
          ],
          name: "adminRefundEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "uint128",
              name: "_amount0Max",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "_amount1Max",
              type: "uint128",
            },
          ],
          name: "collect",
          outputs: [
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "fee0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "fee1",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint128",
                  name: "liquidity",
                  type: "uint128",
                },
                {
                  internalType: "uint256",
                  name: "amount0Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount1Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
              ],
              internalType:
                "struct INonfungiblePositionManager.DecreaseLiquidityParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "decreaseLiquidity",
          outputs: [
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int24",
              name: "currentTick",
              type: "int24",
            },
            {
              internalType: "int24",
              name: "tickLower",
              type: "int24",
            },
            {
              internalType: "int24",
              name: "tickHigher",
              type: "int24",
            },
            {
              internalType: "uint128",
              name: "liquidity",
              type: "uint128",
            },
          ],
          name: "getAmountsForLiquidity",
          outputs: [
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
          ],
          name: "getFee",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "lpFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "collectFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "flatFee",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "flatFeeToken",
                  type: "address",
                },
              ],
              internalType: "struct ILenaLock.FeeStruct",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getFeeOptionAtIndex",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "lpFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "collectFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "flatFee",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "flatFeeToken",
                  type: "address",
                },
              ],
              internalType: "struct ILenaLock.FeeStruct",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFeeOptionLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
          ],
          name: "getLock",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "lock_id",
                  type: "uint256",
                },
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pool",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pendingOwner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ucf",
                  type: "uint256",
                },
              ],
              internalType: "struct ILenaLock.Lock",
              name: "_lock",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLocksLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getNumUserLocks",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getUserLockAtIndex",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "lock_id",
                  type: "uint256",
                },
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pool",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pendingOwner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ucf",
                  type: "uint256",
                },
              ],
              internalType: "struct ILenaLock.Lock",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount0Desired",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount1Desired",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount0Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount1Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
              ],
              internalType:
                "struct INonfungiblePositionManager.IncreaseLiquidityParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "increaseLiquidity",
          outputs: [
            {
              internalType: "uint128",
              name: "liquidity",
              type: "uint128",
            },
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "dustRecipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "feeName",
                  type: "string",
                },
                {
                  internalType: "bytes[]",
                  name: "r",
                  type: "bytes[]",
                },
              ],
              internalType: "struct ILenaLock.LockParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "lock",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "dustRecipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "feeName",
                  type: "string",
                },
                {
                  internalType: "bytes[]",
                  name: "r",
                  type: "bytes[]",
                },
              ],
              internalType: "struct ILenaLock.LockParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "lockAndConvert",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pendingOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_unlockDate",
              type: "uint256",
            },
          ],
          name: "relock",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
          ],
          name: "removeFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_additionalCollector",
              type: "address",
            },
          ],
          name: "setAdditionalCollector",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_collectAddress",
              type: "address",
            },
          ],
          name: "setCollectAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_autoCollectAccount",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_lpFeeReceiver",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_collectFeeReceiver",
              type: "address",
            },
          ],
          name: "setFeeParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IFeeResolver",
              name: "_resolver",
              type: "address",
            },
          ],
          name: "setFeeResolver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_ucf",
              type: "uint256",
            },
          ],
          name: "setUCF",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int24",
              name: "tickSpacing",
              type: "int24",
            },
          ],
          name: "tickSpacingToMaxTick",
          outputs: [
            {
              internalType: "int24",
              name: "maxTick",
              type: "int24",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "transferLockOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptLockOwnership: "contracts/locker/v2/ILenaLock.sol",
        collect: "contracts/locker/v2/ILenaLock.sol",
        decreaseLiquidity: "contracts/locker/v2/ILenaLock.sol",
        getAmountsForLiquidity: "contracts/locker/v2/ILenaLock.sol",
        getFee: "contracts/locker/v2/ILenaLock.sol",
        getLock: "contracts/locker/v2/ILenaLock.sol",
        getLocksLength: "contracts/locker/v2/ILenaLock.sol",
        getNumUserLocks: "contracts/locker/v2/ILenaLock.sol",
        getUserLockAtIndex: "contracts/locker/v2/ILenaLock.sol",
        increaseLiquidity: "contracts/locker/v2/ILenaLock.sol",
        lock: "contracts/locker/v2/ILenaLock.sol",
        lockAndConvert: "contracts/locker/v2/ILenaLock.sol",
        relock: "contracts/locker/v2/ILenaLock.sol",
        setAdditionalCollector: "contracts/locker/v2/ILenaLock.sol",
        setCollectAddress: "contracts/locker/v2/ILenaLock.sol",
        setUCF: "contracts/locker/v2/ILenaLock.sol",
        transferLockOwnership: "contracts/locker/v2/ILenaLock.sol",
        withdraw: "contracts/locker/v2/ILenaLock.sol",
        acceptOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        owner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        pendingOwner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        onERC721Received:
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      },
    },
    TokenFactoryV2: {
      address: "0x92Fb6F2984fAf5F389b9bc30b0eA75CDa9791DD2",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_uniPositionManager",
              type: "address",
            },
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_lenaLock",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "tokenAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenPoolAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creatorAddress",
              type: "address",
            },
          ],
          name: "TokenCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokenPools",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokenPoolsLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokensLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
          ],
          name: "createToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokenPools",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_deployer",
              type: "address",
            },
          ],
          name: "getUserDeployedTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lenaLocker",
          outputs: [
            {
              internalType: "contract ILenaLock",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenCreationFee",
              type: "uint256",
            },
          ],
          name: "setTokenCreationFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenReader",
              type: "address",
            },
          ],
          name: "setTokenReader",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenCreationFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenReader",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "tokenToPools",
          outputs: [
            {
              internalType: "address",
              name: "poolAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "lockID",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uniPositionManager",
          outputs: [
            {
              internalType: "contract INonfungiblePositionManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userDeployedTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        onERC721Received:
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    TokenReader: {
      address: "0x2605cbE35B42AEA99b7f7d83e37F2f3Fb65b1277",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSale",
              type: "address",
            },
          ],
          name: "TokensBought",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSale",
              type: "address",
            },
          ],
          name: "TokensSold",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "buyTokens",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "distributeToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressEthSpent",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressTokenBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAllBuyersBalances",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAmountRaised",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getBuyers",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getCreatorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getPairAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getRequiredEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokenOfTokenSale",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokensPerEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "isLbpComplete",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "sellTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        getAllTokenSales: "contracts/peripherals/TokenFactoryReader.sol",
        getAllTokens: "contracts/peripherals/TokenFactoryReader.sol",
        buyTokens: "contracts/peripherals/TokenSaleRouter.sol",
        distributeToken: "contracts/peripherals/TokenSaleRouter.sol",
        sellTokens: "contracts/peripherals/TokenSaleRouter.sol",
        getAddressEthSpent: "contracts/peripherals/TokenSaleReader.sol",
        getAddressTokenBalances: "contracts/peripherals/TokenSaleReader.sol",
        getAllBuyersBalances: "contracts/peripherals/TokenSaleReader.sol",
        getAmountRaised: "contracts/peripherals/TokenSaleReader.sol",
        getBuyers: "contracts/peripherals/TokenSaleReader.sol",
        getCreatorAddress: "contracts/peripherals/TokenSaleReader.sol",
        getPairAddress: "contracts/peripherals/TokenSaleReader.sol",
        getRequiredEth: "contracts/peripherals/TokenSaleReader.sol",
        getTokenOfTokenSale: "contracts/peripherals/TokenSaleReader.sol",
        getTokensPerEth: "contracts/peripherals/TokenSaleReader.sol",
        isLbpComplete: "contracts/peripherals/TokenSaleReader.sol",
      },
    },
  },
  8453: {
    ShitterReader: {
      address: "0xdD63a521E20cD3F785C5E7d0b68217Bd944f2D93",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "buyTokens",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressEthSpent",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressTokenBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAmountRaised",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getRequiredEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokenOfTokenSale",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokensPerEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "isLbpComplete",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "sellTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  84532: {
    LenaLock: {
      address: "0x593866Dc27fc2e4FEad2EC77cD1a99a4f5f478FF",
      abi: [
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_autoCollectAddress",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_lpFeeReceiver",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_collectFeeReceiver",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "nameHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "lpFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "collectFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "flatFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "flatFeeToken",
              type: "address",
            },
          ],
          name: "onAddFee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
          ],
          name: "onDecreaseLiquidity",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "nameHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "lpFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "collectFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "flatFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "flatFeeToken",
              type: "address",
            },
          ],
          name: "onEditFee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
          ],
          name: "onIncreaseLiquidity",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lock_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nftPositionManager",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nft_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "additionalCollector",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "collectAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unlockDate",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "collectFee",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "poolAddress",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "uint96",
                  name: "nonce",
                  type: "uint96",
                },
                {
                  internalType: "address",
                  name: "operator",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "token0",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "token1",
                  type: "address",
                },
                {
                  internalType: "uint24",
                  name: "fee",
                  type: "uint24",
                },
                {
                  internalType: "int24",
                  name: "tickLower",
                  type: "int24",
                },
                {
                  internalType: "int24",
                  name: "tickUpper",
                  type: "int24",
                },
                {
                  internalType: "uint128",
                  name: "liquidity",
                  type: "uint128",
                },
                {
                  internalType: "uint256",
                  name: "feeGrowthInside0LastX128",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "feeGrowthInside1LastX128",
                  type: "uint256",
                },
                {
                  internalType: "uint128",
                  name: "tokensOwed0",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "tokensOwed1",
                  type: "uint128",
                },
              ],
              indexed: false,
              internalType: "struct INonfungiblePositionManager.Position",
              name: "position",
              type: "tuple",
            },
          ],
          name: "onLock",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "currentOwner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "pendingOwner",
              type: "address",
            },
          ],
          name: "onLockOwnershipTransferStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unlockDate",
              type: "uint256",
            },
          ],
          name: "onRelock",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "nameHash",
              type: "bytes32",
            },
          ],
          name: "onRemoveFee",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "additionalCollector",
              type: "address",
            },
          ],
          name: "onSetAdditionalCollector",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "collectAddress",
              type: "address",
            },
          ],
          name: "onSetCollectAddress",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "migrator",
              type: "address",
            },
          ],
          name: "onSetMigrator",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ucf",
              type: "uint256",
            },
          ],
          name: "onSetUCF",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lockId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "oldOwner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "onTransferLockOwnership",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "lock_id",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "onWithdraw",
          type: "event",
        },
        {
          inputs: [],
          name: "AUTO_COLLECT_ACCOUNT",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ETERNAL_LOCK",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_ADDR_COLLECT",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_ADDR_LP",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_DENOMINATOR",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_RESOLVER",
          outputs: [
            {
              internalType: "contract IFeeResolver",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "LOCKS",
          outputs: [
            {
              internalType: "uint256",
              name: "lock_id",
              type: "uint256",
            },
            {
              internalType: "contract INonfungiblePositionManager",
              name: "nftPositionManager",
              type: "address",
            },
            {
              internalType: "address",
              name: "pool",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nft_id",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "pendingOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "additionalCollector",
              type: "address",
            },
            {
              internalType: "address",
              name: "collectAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "unlockDate",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "ucf",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NONCE",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
          ],
          name: "acceptLockOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_lpFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_collectFee",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_flatFee",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_flatFeeToken",
              type: "address",
            },
          ],
          name: "addOrEditFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "adminRefundERC20",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_receiver",
              type: "address",
            },
          ],
          name: "adminRefundEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_recipient",
              type: "address",
            },
            {
              internalType: "uint128",
              name: "_amount0Max",
              type: "uint128",
            },
            {
              internalType: "uint128",
              name: "_amount1Max",
              type: "uint128",
            },
          ],
          name: "collect",
          outputs: [
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "fee0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "fee1",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint128",
                  name: "liquidity",
                  type: "uint128",
                },
                {
                  internalType: "uint256",
                  name: "amount0Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount1Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
              ],
              internalType:
                "struct INonfungiblePositionManager.DecreaseLiquidityParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "decreaseLiquidity",
          outputs: [
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int24",
              name: "currentTick",
              type: "int24",
            },
            {
              internalType: "int24",
              name: "tickLower",
              type: "int24",
            },
            {
              internalType: "int24",
              name: "tickHigher",
              type: "int24",
            },
            {
              internalType: "uint128",
              name: "liquidity",
              type: "uint128",
            },
          ],
          name: "getAmountsForLiquidity",
          outputs: [
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
          ],
          name: "getFee",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "lpFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "collectFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "flatFee",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "flatFeeToken",
                  type: "address",
                },
              ],
              internalType: "struct ILenaLock.FeeStruct",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getFeeOptionAtIndex",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "lpFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "collectFee",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "flatFee",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "flatFeeToken",
                  type: "address",
                },
              ],
              internalType: "struct ILenaLock.FeeStruct",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFeeOptionLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
          ],
          name: "getLock",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "lock_id",
                  type: "uint256",
                },
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pool",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pendingOwner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ucf",
                  type: "uint256",
                },
              ],
              internalType: "struct ILenaLock.Lock",
              name: "_lock",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLocksLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getNumUserLocks",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getUserLockAtIndex",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "lock_id",
                  type: "uint256",
                },
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pool",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "pendingOwner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ucf",
                  type: "uint256",
                },
              ],
              internalType: "struct ILenaLock.Lock",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount0Desired",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount1Desired",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount0Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount1Min",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "deadline",
                  type: "uint256",
                },
              ],
              internalType:
                "struct INonfungiblePositionManager.IncreaseLiquidityParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "increaseLiquidity",
          outputs: [
            {
              internalType: "uint128",
              name: "liquidity",
              type: "uint128",
            },
            {
              internalType: "uint256",
              name: "amount0",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount1",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "dustRecipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "feeName",
                  type: "string",
                },
                {
                  internalType: "bytes[]",
                  name: "r",
                  type: "bytes[]",
                },
              ],
              internalType: "struct ILenaLock.LockParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "lock",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "contract INonfungiblePositionManager",
                  name: "nftPositionManager",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nft_id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "dustRecipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "owner",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "additionalCollector",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "collectAddress",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "unlockDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "feeName",
                  type: "string",
                },
                {
                  internalType: "bytes[]",
                  name: "r",
                  type: "bytes[]",
                },
              ],
              internalType: "struct ILenaLock.LockParams",
              name: "params",
              type: "tuple",
            },
          ],
          name: "lockAndConvert",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pendingOwner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_unlockDate",
              type: "uint256",
            },
          ],
          name: "relock",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
          ],
          name: "removeFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_additionalCollector",
              type: "address",
            },
          ],
          name: "setAdditionalCollector",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_collectAddress",
              type: "address",
            },
          ],
          name: "setCollectAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_autoCollectAccount",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_lpFeeReceiver",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "_collectFeeReceiver",
              type: "address",
            },
          ],
          name: "setFeeParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IFeeResolver",
              name: "_resolver",
              type: "address",
            },
          ],
          name: "setFeeResolver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_ucf",
              type: "uint256",
            },
          ],
          name: "setUCF",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int24",
              name: "tickSpacing",
              type: "int24",
            },
          ],
          name: "tickSpacingToMaxTick",
          outputs: [
            {
              internalType: "int24",
              name: "maxTick",
              type: "int24",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "transferLockOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_lockId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_receiver",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        acceptLockOwnership: "contracts/locker/v2/ILenaLock.sol",
        collect: "contracts/locker/v2/ILenaLock.sol",
        decreaseLiquidity: "contracts/locker/v2/ILenaLock.sol",
        getAmountsForLiquidity: "contracts/locker/v2/ILenaLock.sol",
        getFee: "contracts/locker/v2/ILenaLock.sol",
        getLock: "contracts/locker/v2/ILenaLock.sol",
        getLocksLength: "contracts/locker/v2/ILenaLock.sol",
        getNumUserLocks: "contracts/locker/v2/ILenaLock.sol",
        getUserLockAtIndex: "contracts/locker/v2/ILenaLock.sol",
        increaseLiquidity: "contracts/locker/v2/ILenaLock.sol",
        lock: "contracts/locker/v2/ILenaLock.sol",
        lockAndConvert: "contracts/locker/v2/ILenaLock.sol",
        relock: "contracts/locker/v2/ILenaLock.sol",
        setAdditionalCollector: "contracts/locker/v2/ILenaLock.sol",
        setCollectAddress: "contracts/locker/v2/ILenaLock.sol",
        setUCF: "contracts/locker/v2/ILenaLock.sol",
        transferLockOwnership: "contracts/locker/v2/ILenaLock.sol",
        withdraw: "contracts/locker/v2/ILenaLock.sol",
        acceptOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        owner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        pendingOwner: "@openzeppelin/contracts/access/Ownable2Step.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable2Step.sol",
        onERC721Received:
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      },
    },
    ShitterFactory: {
      address: "0x8D4a776D90D73bF969FF61ab0b2C1fE0d2729026",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_uniswapV2Router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "tokenAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSaleAddress",
              type: "address",
            },
          ],
          name: "TokenCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokenSales",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokenSalesLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokensLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
          ],
          name: "createToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_deployer",
              type: "address",
            },
          ],
          name: "getUserDeployedTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenCreationFee",
              type: "uint256",
            },
          ],
          name: "setTokenCreationFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenReader",
              type: "address",
            },
          ],
          name: "setTokenReader",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenCreationFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenReader",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "tokenToTokenSale",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uniswapV2Router",
          outputs: [
            {
              internalType: "contract IUniswapV2Router",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userDeployedTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
    ShitterReader: {
      address: "0xb993d90059bCCa066C447C71a7f5BD4b4b4A7852",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSale",
              type: "address",
            },
          ],
          name: "TokensBought",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSale",
              type: "address",
            },
          ],
          name: "TokensSold",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "buyTokens",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "distributeToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressEthSpent",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressTokenBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAllBuyersBalances",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAmountRaised",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getBuyers",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getPairAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getRequiredEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokenOfTokenSale",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokensPerEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "isLbpComplete",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "sellTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TokenFactory: {
      address: "0x5C6919a95278bb3EaB62f3f34194b3065f1969eC",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_uniswapV2Router",
              type: "address",
            },
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "tokenAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSaleAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creatorAddress",
              type: "address",
            },
          ],
          name: "TokenCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokenSales",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokenSalesLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokensLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
          ],
          name: "createToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_deployer",
              type: "address",
            },
          ],
          name: "getUserDeployedTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "individualEthCap",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "requiredEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_individualEthCap",
              type: "uint256",
            },
          ],
          name: "setIndividualEthCap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_requiredEth",
              type: "uint256",
            },
          ],
          name: "setRequiredEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenCreationFee",
              type: "uint256",
            },
          ],
          name: "setTokenCreationFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenReader",
              type: "address",
            },
          ],
          name: "setTokenReader",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenCreationFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenReader",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "tokenToTokenSale",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uniswapV2Router",
          outputs: [
            {
              internalType: "contract IUniswapV2Router",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userDeployedTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    TokenFactoryV2: {
      address: "0x83b98cEbdAb551088686Ea19BE227482A092D6cd",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_uniPositionManager",
              type: "address",
            },
            {
              internalType: "address",
              name: "_initialOwner",
              type: "address",
            },
            {
              internalType: "address",
              name: "_lenaLock",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "tokenAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenPoolAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creatorAddress",
              type: "address",
            },
          ],
          name: "TokenCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokenPools",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokenPoolsLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "allTokensLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
          ],
          name: "createToken",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokenPools",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_deployer",
              type: "address",
            },
          ],
          name: "getUserDeployedTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "individualEthCap",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lenaLocker",
          outputs: [
            {
              internalType: "contract ILenaLock",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "requiredEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_individualEthCap",
              type: "uint256",
            },
          ],
          name: "setIndividualEthCap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_requiredEth",
              type: "uint256",
            },
          ],
          name: "setRequiredEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenCreationFee",
              type: "uint256",
            },
          ],
          name: "setTokenCreationFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenReader",
              type: "address",
            },
          ],
          name: "setTokenReader",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenCreationFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tokenReader",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "tokenToPools",
          outputs: [
            {
              internalType: "address",
              name: "poolAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "lockID",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uniPositionManager",
          outputs: [
            {
              internalType: "contract INonfungiblePositionManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userDeployedTokens",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    TokenReader: {
      address: "0xA13C8Aa63EA06752e583162aDf7DC1a74d70188B",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSale",
              type: "address",
            },
          ],
          name: "TokensBought",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tokenSale",
              type: "address",
            },
          ],
          name: "TokensSold",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "buyTokens",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "distributeToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressEthSpent",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "getAddressTokenBalances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAllBuyersBalances",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
            {
              internalType: "bool",
              name: "complete",
              type: "bool",
            },
          ],
          name: "getAllCompletedOrPendingTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokenSales",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenFactory",
              type: "address",
            },
          ],
          name: "getAllTokens",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getAmountRaised",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getBuyers",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getCreatorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getPairAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getRequiredEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokenOfTokenSale",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "getTokensPerEth",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
          ],
          name: "isLbpComplete",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenSale",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "sellTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        getAllTokenSales: "contracts/peripherals/TokenFactoryReader.sol",
        getAllTokens: "contracts/peripherals/TokenFactoryReader.sol",
        buyTokens: "contracts/peripherals/TokenSaleRouter.sol",
        distributeToken: "contracts/peripherals/TokenSaleRouter.sol",
        sellTokens: "contracts/peripherals/TokenSaleRouter.sol",
        getAddressEthSpent: "contracts/peripherals/TokenSaleReader.sol",
        getAddressTokenBalances: "contracts/peripherals/TokenSaleReader.sol",
        getAllBuyersBalances: "contracts/peripherals/TokenSaleReader.sol",
        getAmountRaised: "contracts/peripherals/TokenSaleReader.sol",
        getBuyers: "contracts/peripherals/TokenSaleReader.sol",
        getCreatorAddress: "contracts/peripherals/TokenSaleReader.sol",
        getPairAddress: "contracts/peripherals/TokenSaleReader.sol",
        getRequiredEth: "contracts/peripherals/TokenSaleReader.sol",
        getTokenOfTokenSale: "contracts/peripherals/TokenSaleReader.sol",
        getTokensPerEth: "contracts/peripherals/TokenSaleReader.sol",
        isLbpComplete: "contracts/peripherals/TokenSaleReader.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
